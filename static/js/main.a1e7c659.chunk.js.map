{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyHandler","event","setState","key","document","documentElement","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,2BAFhB,EAaEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEH,WAAW,4BAAD,OAA8BE,EAAME,IAApC,QAd9B,uDAKE,WACEC,SAASC,gBAAgBC,iBAAiB,UAAWC,KAAKP,cAN9D,kCASE,WACEI,SAASI,oBAAoB,UAAWD,KAAKP,cAVjD,oBAiBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA8BF,KAAKT,MAAMC,mBApBjD,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.a1e7c659.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string | EventTarget | null,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.documentElement.addEventListener('keydown', this.keyHandler);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keydown', this.keyHandler);\n  }\n\n  keyHandler = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{ this.state.pressedKey}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}